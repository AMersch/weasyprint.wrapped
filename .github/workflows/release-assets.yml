name: release-assets
on:
  push:
    tags:
      - 'v*'
jobs:
  release-asset:
    runs-on: ubuntu-latest
    needs: [build-linux-asset, build-windows-asset]
    steps:
      - uses: actions/checkout@v3
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Download assets
        uses: actions/download-artifact@v3
        with:
          name: assets
      - name: Create nuget package
        run: dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=${{ github.ref }} --output nupkgs
        working-directory: ./src/Weasyprint.Wrapped
      - name: Create add github source
        run: dotnet nuget add source --username bert@hertogen.net --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/berthertogen/index.json"
        working-directory: ./src/Weasyprint.Wrapped
      - name: Push nuget package
        run: dotnet nuget push "Weasyprint.Wrapped.${{ github.ref }}.nupkg"  --api-key "${{ secrets.GITHUB_TOKEN }}" --source "github"
        working-directory: ./src/Weasyprint.Wrapped/nupkgs
      - name: Upload nuget package
        id: upload-nuget-package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./src/Weasyprint.Wrapped/nupkgs/Weasyprint.Wrapped.${{ github.ref }}.nupkg"
          asset_name: "Weasyprint.Wrapped.${{ github.ref }}.nupkg"
          asset_content_type: application/zip
      - name: Upload release asset linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: standalone-linux-64.zip
          asset_name: standalone-linux-64.zip
          asset_content_type: application/zip
      - name: Upload release asset windows
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: standalone-windows-64.zip
          asset_name: standalone-windows-64.zip
          asset_content_type: application/zip
  